-- Eliminar tablas en orden correcto (con CASCADE para eliminar dependencias)
DROP TABLE IF EXISTS config CASCADE;
DROP TABLE IF EXISTS sale_detail CASCADE;
DROP TABLE IF EXISTS sale CASCADE;
DROP TABLE IF EXISTS quotation_detail CASCADE;
DROP TABLE IF EXISTS quotation CASCADE;
DROP TABLE IF EXISTS product CASCADE;
DROP TABLE IF EXISTS clients CASCADE;
DROP TABLE IF EXISTS users CASCADE;

-- Tabla de usuarios (solo admins y empleados)
CREATE TABLE users (
    id_user SERIAL PRIMARY KEY,
    username VARCHAR(20) NOT NULL UNIQUE,
    password TEXT NOT NULL CHECK(LENGTH(password) >= 8),
    tipo VARCHAR(20) NOT NULL, -- 'admin', 'empleado'
    first_name VARCHAR(20) NOT NULL,
    last_name VARCHAR(30) NOT NULL,
    phone_number VARCHAR(20),
    email VARCHAR(100) NOT NULL,
    post VARCHAR(50),         -- Solo para admin
    salary DECIMAL(10,2)       -- Solo para admin
);

-- Tabla de clientes (sin usuario ni contraseña)
CREATE TABLE clients (
    id_client SERIAL PRIMARY KEY,
    first_name VARCHAR(20) NOT NULL,
    last_name VARCHAR(30) NOT NULL,
    phone_number VARCHAR(20),
    email VARCHAR(100),
    registration_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status VARCHAR(15)
);

-- Tabla de productos
CREATE TABLE product (
    id_product SERIAL PRIMARY KEY,
    code VARCHAR(15) UNIQUE,
    name VARCHAR(50) NOT NULL,
    category VARCHAR(15) NOT NULL,
    description TEXT,
    sale_price DECIMAL(10,2) NOT NULL,
    stock INT NOT NULL
);

-- Tabla de cotizaciones
CREATE TABLE quotation (
    id_quotation SERIAL PRIMARY KEY,
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    total DECIMAL(10,2) NOT NULL,
    id_client INT REFERENCES clients(id_client)
);

-- Detalle de cotizaciones
CREATE TABLE quotation_detail (
    id_quotation_detail SERIAL PRIMARY KEY,
    quantity INT NOT NULL,
    unit_price DECIMAL(10,2) NOT NULL,
    id_quotation INT REFERENCES quotation(id_quotation),
    id_product INT REFERENCES product(id_product)
);

-- Tabla de ventas
CREATE TABLE sale (
    id_sale SERIAL PRIMARY KEY,
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    payment_method VARCHAR(50) NOT NULL,
    total DECIMAL(10,2) NOT NULL,
    id_client INT REFERENCES clients(id_client),
    id_user INT REFERENCES users(id_user) -- empleado/admin que realizó la venta
);

-- Detalle de ventas
CREATE TABLE sale_detail (
    id_sale_detail SERIAL PRIMARY KEY,
    quantity INT NOT NULL,
    unit_price DECIMAL(10,2) NOT NULL,
    id_sale INT REFERENCES sale(id_sale),
    id_product INT REFERENCES product(id_product)
);

-- Configuración de la tienda
CREATE TABLE config (
    id_config SERIAL PRIMARY KEY,
    store_name VARCHAR(30) NOT NULL DEFAULT 'MaiHardware Store',
    igv DECIMAL(4,2) NOT NULL DEFAULT 0.18,
    default_printer VARCHAR(50)
);

-- =========================
-- ÍNDICES RECOMENDADOS
-- =========================
CREATE INDEX idx_clients_email ON clients(email);
CREATE INDEX idx_sale_id_client ON sale(id_client);
CREATE INDEX idx_sale_id_user ON sale(id_user);
CREATE INDEX idx_quotation_id_client ON quotation(id_client);
CREATE INDEX idx_quotation_detail_id_quotation ON quotation_detail(id_quotation);
CREATE INDEX idx_quotation_detail_id_product ON quotation_detail(id_product);
CREATE INDEX idx_sale_detail_id_sale ON sale_detail(id_sale);
CREATE INDEX idx_sale_detail_id_product ON sale_detail(id_product);

-- =========================
-- DATOS DE PRUEBA
-- =========================

-- Usuarios: admin y empleado
INSERT INTO users (username, password, tipo, first_name, last_name, phone_number, email, post, salary)
VALUES 
('admin', 'admin1234', 'admin', 'Juan', 'Pérez', '999888777', 'admin@correo.com', 'Gerente', 5000.00),
('empleado1', 'emp12345', 'empleado', 'Ana', 'García', '988877766', 'empleado1@correo.com', NULL, NULL);

-- Clientes
INSERT INTO clients (first_name, last_name, phone_number, email, registration_date, status)
VALUES 
('Carlos', 'López', '977766655', 'cliente1@correo.com', CURRENT_TIMESTAMP, 'activo'),
('María', 'Sánchez', '966655544', 'cliente2@correo.com', CURRENT_TIMESTAMP, 'activo');

-- Productos
INSERT INTO product (code, name, category, description, sale_price, stock)
VALUES 
('P001', 'Martillo', 'Herramientas', 'Martillo de acero', 25.50, 100),
('P002', 'Destornillador', 'Herramientas', 'Destornillador plano', 10.00, 200),
('P003', 'Taladro', 'Eléctricos', 'Taladro eléctrico 500W', 120.00, 50);

-- Cotización para cliente1
INSERT INTO quotation (date, total, id_client)
VALUES (CURRENT_TIMESTAMP, 55.50, 1);

-- Detalle de cotización
INSERT INTO quotation_detail (quantity, unit_price, id_quotation, id_product)
VALUES 
(2, 25.50, 1, 1), -- 2 Martillos
(1, 4.50, 1, 2);  -- 1 Destornillador

-- Venta realizada por empleado1 al cliente1
INSERT INTO sale (date, payment_method, total, id_client, id_user)
VALUES (CURRENT_TIMESTAMP, 'Efectivo', 145.50, 1, 2);

-- Detalle de venta
INSERT INTO sale_detail (quantity, unit_price, id_sale, id_product)
VALUES 
(1, 120.00, 1, 3), -- 1 Taladro
(1, 25.50, 1, 1);  -- 1 Martillo

-- Configuración de la tienda
INSERT INTO config (store_name, igv, default_printer)
VALUES ('MaiHardware Store', 0.18, 'HP-LaserJet-123');